<?xml version="1.0" encoding="UTF-8"?>

<mule xmlns:apikit="http://www.mulesoft.org/schema/mule/mule-apikit" xmlns:ee="http://www.mulesoft.org/schema/mule/ee/core"
	xmlns:http="http://www.mulesoft.org/schema/mule/http"
	xmlns="http://www.mulesoft.org/schema/mule/core" xmlns:doc="http://www.mulesoft.org/schema/mule/documentation" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/current/mule.xsd
http://www.mulesoft.org/schema/mule/http http://www.mulesoft.org/schema/mule/http/current/mule-http.xsd
http://www.mulesoft.org/schema/mule/ee/core http://www.mulesoft.org/schema/mule/ee/core/current/mule-ee.xsd
http://www.mulesoft.org/schema/mule/mule-apikit http://www.mulesoft.org/schema/mule/mule-apikit/current/mule-apikit.xsd">
	<http:listener-config name="HTTP_Listener_config" doc:name="HTTP Listener config" doc:id="5c409705-13d2-4dcc-a6e0-d5999ea92425" >
		<http:listener-connection host="0.0.0.0" port="8081" />
	</http:listener-config>
	<global-property doc:name="Global Property" doc:id="20c25f24-029a-44c8-831d-77b90515bba2" name="env" value="local" />
	<configuration-properties doc:name="Configuration properties" doc:id="86f2c8ec-f97e-417d-b31a-f9df719b2639" file="config-${env}.yaml" />
	<apikit:config outboundHeadersMapName="outboundHeadersMapName" httpStatusVarName="httpStatus" doc:name="Router" doc:id="ffa94235-4923-491a-8f05-5656c86e17d4" name="application-config" raml="routerContract.raml" >
		<apikit:flow-mappings >
			<apikit:flow-mapping resource="/users/{id}" action="put" content-type="application/json" flow-ref="users/(id)" />
		</apikit:flow-mappings>
	</apikit:config>
	<flow name="transformJson" doc:id="58f04d2e-ea94-498a-b9a3-eda95220d01b">
		<ee:transform doc:name="Transform Message" doc:id="6b84d689-f564-40c9-9ca3-d97a291052ab">
			<ee:message>
				<ee:set-payload><![CDATA[%dw 2.0
/* by right clicking / set metadata / choose type json in the dropbox
 * / choose example in the drop down box / choose the json file
 * dataweve will create a schema automatically as per the example.
 * It will also use this example when running the preview for the transformation
 */ 

output application/json
var x = 5
fun isFive(y) = if (y == 5) 1 else 0
fun convertDateTimeToZulu(dateTime) =  (dateTime as DateTime >> "UTC") as  DateTime {format: "yyyy-MM-dd'T'HH:mm:ss.SSSXXX"}

---
{
	dateWithUTCTime: now() as Date {format: "yyyy-MM-dd'T'00:00:00'Z'"},
	dateWithUTCTime2: '2019-02-02'  as Date as Date {format: "yyyy-MM-dd'T'00:00:00'Z'"},
	dateWithUTCConversion: (now() >> "UTC") as DateTime {format: "yyyy-MM-dd'T'HH:mm:ss.SSS'Z'"},
	timeWithMilliseconds: now() as Time { format: "HH:mm:ss.SSS'Z'" }, //converts to UTC time
	timeWithMilliseconds2: '08:30' as Time as Time { format: "HH:mm:ss.SSS'Z'" },
	varFromFunction: isFive(x),
	name: payload.name,  // payload comes from the example set
	filePropertyVar: p("http.port"),
	(varIncludedUnderCertainCondition:2) if (x==5), // conditional key
	timeZoneOffset: ((now() >> "America/Montreal") as String {format:"Z"}) 

}]]></ee:set-payload>
			</ee:message>
		</ee:transform>
	</flow>
	<flow name="transformFlatToHierarchy" doc:id="83b49607-58e7-4eb1-9e5a-8131981cea18" >
		<ee:transform doc:name="Transform Message" doc:id="66bb53fa-40c5-434a-bc72-034a79ea4369" >
			<ee:message >
				<ee:set-payload ><![CDATA[%dw 2.0
output application/json
var t = [ {"code": 1, "parentCode": null}, {"code": 2, "parentCode": 1 }, {"code": 3, "parentCode": 2 }]
fun teste(technicalPosition) = technicalPosition ++ {"technicalPositions": 
	(  
	  t filter (value, index) -> value.parentCode ~= technicalPosition.code	
	) map(ele, index) -> teste(ele)   
	}
	

---
{
	technical: [teste({"code": 1, "parentCode": null})]
}]]></ee:set-payload>
			</ee:message>
		</ee:transform>
	</flow>
	<flow name="globalFlow" doc:id="ebabfd05-3913-4e55-ade4-68bd134c2c36" >
		<http:listener doc:name="Listener" doc:id="20f5d11a-4a40-4f47-a7bd-3e59f24d9b94" config-ref="HTTP_Listener_config" path="api/*">
			<http:response statusCode="#[vars.httpStatus default 200]" />
			<http:error-response statusCode="#[vars.httpStatus default 500]" >
				<http:body ><![CDATA[#[payload]]]></http:body>
			</http:error-response>
		</http:listener>
		<apikit:router doc:name="APIkit Router" doc:id="3365d192-2f37-49e0-b131-f45b2b463842" config-ref="application-config"/>
		<error-handler >
			<on-error-propagate enableNotifications="true" logException="true" doc:name="On Error Propagate" doc:id="c0c249b1-6369-4453-b3da-a2ed1b57fa99" type="APP:IS_DEVIL">
				<ee:transform doc:name="Transform Message" doc:id="679b8af5-6c5f-4457-9fb3-12a018c3bd7b" >
					<ee:message >
						<ee:set-payload ><![CDATA[%dw 2.0
output application/json
---
{
description:error.description,
errorType: (error.errorType.namespace default "")  ++ ":" ++ (error.errorType.identifier default ""),
cause: error.cause.cause.message, 
correlationId: correlationId,
date: now()
}]]></ee:set-payload>
					</ee:message>
					<ee:variables >
						<ee:set-variable variableName="httpStatus" ><![CDATA[403]]></ee:set-variable>
					</ee:variables>
				</ee:transform>
			</on-error-propagate>
			<on-error-propagate enableNotifications="true" logException="true" doc:name="On Error Propagate" doc:id="3ab4d28a-ffbe-4c66-af79-d15114505bd4" type="APIKIT:BAD_REQUEST">
				<ee:transform doc:name="Transform Message" doc:id="d812c273-9c06-4324-80f5-7882494ab0c1">
					<ee:message>
						<ee:set-payload><![CDATA[%dw 2.0
output application/json
---
{
description:error.description,
errorType: (error.errorType.namespace default "")  ++ ":" ++ (error.errorType.identifier default ""),
cause: error.cause.cause.message, 
correlationId: correlationId,
date: now()
}]]></ee:set-payload>
					</ee:message>
					<ee:variables>
						<ee:set-variable variableName="httpStatus"><![CDATA[400]]></ee:set-variable>
					</ee:variables>
				</ee:transform>
			</on-error-propagate>
		</error-handler>
	</flow>
</mule>
